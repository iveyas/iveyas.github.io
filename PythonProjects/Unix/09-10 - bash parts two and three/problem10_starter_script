#!/bin/bash
#
# incomplete bash script for generating a "total time logged in" value from a file produced by last -Faw.
# supply 1 parameter to the script:
# -.   the name of a nonempty file, derived from last -Faw, to process 
#      requirements: 
#      -.  must lack last two, "wtmp" records  (assumed)
#      -.  must lack "root  system reboot" records  (assumed)
#      -.  all session times must be less than a day long:  i.e., file may not contain time records of the form (\d+\+\d{2}:\d{2})

# **** parameter checking and initialization ****

# --- ---- supporting routine: checks if argument exists and is a regular file --- ----

function assert_nonempty_regular_file {
  if [ ! -e $1 ]; then  echo '??' $0: file "$1" doesn\'t exist         >/dev/stderr;  exit 2; fi
  if [ ! -f $1 ]; then  echo '??' $0: item "$1" isn\'t a regular file  >/dev/stderr;  exit 2; fi
  if [ ! -s $1 ]; then  echo '??' $0: file "$1" is empty               >/dev/stderr;  exit 2; fi
}

# --- parameter checking proper ----

if [ $# -ne 1 ]; then echo '??' $0: exactly 1 parameter required: "$#" supplied  >/dev/stderr;  exit 2;  fi

file_to_total=$1
assert_nonempty_regular_file "$file_to_total"

# finish the checking
#
# add a test that checks that there are no time records for logins that are a day or more long
# if this test fails, write an appropriate error message to /dev/stderr, then exit the script with a status code of 1

# **** main body of script starts here ****

echo about to remove temp.txt prior to overwriting it - hit ^C and free this script if you wish to keep temp.txt
rm -i temp.txt

line_number=0
tr -s " " < $file_to_total | cut -d ' ' -f 14,14 >temp.txt
while read time; do
   let line_number+=1
   echo time field on line $line_number is $time
done < temp.txt
echo final value of line number is $line_number

rm -rf temp.txt
